{"version":3,"sources":["services/const.ts","services/ProjectServices.ts","components/ProjectForm.jsx","components/AddProject.jsx","components/Breadcrumb.jsx","pages/ProjectsPage.tsx","dto/Resource.ts","services/FileServices.ts","components/ResourceForm.tsx","services/FolderServices.ts","components/AddResource.jsx","services/ResourceServices.ts","pages/ProjectPage.tsx","services/CustomMonacoService.ts","services/LSPServices.ts","components/editors/NablaEditor.tsx","components/viewer/DefaultViewer.tsx","dto/AIRDResource.ts","dto/Representation.ts","dto/RepresentationDesc.ts","services/SiriusServices.ts","components/viewer/AIRDViewer.tsx","sirius-frontend/actions/request-layers-action.ts","sirius-frontend/actions/request-tools-action.ts","sirius-frontend/actions/set-layers-action.ts","sirius-frontend/actions/set-tools-action.ts","sirius-frontend/views/sirius-edge-view.tsx","sirius-frontend/views/sirius-free-form-flat-container-node-view.tsx","sirius-frontend/views/sirius-list-flat-container-node-view.tsx","sirius-frontend/views/sirius-square-border-node-view.tsx","sirius-frontend/views/sirius-svg-border-node-view.tsx","sirius-frontend/views/sirius-label-view.tsx","sirius-frontend/views/sirius-square-node-view.tsx","sirius-frontend/views/sirius-svg-node-view.tsx","sirius-frontend/sirius-graph-factory.ts","sirius-frontend/popup.ts","sirius-frontend/sirius-websocket-diagram-server.ts","sirius-frontend/di.config.ts","sirius-frontend/actions/execute-container-creation-tool-action.ts","sirius-frontend/actions/execute-node-creation-tool-action.ts","sirius-frontend/actions/execute-tool-action.ts","sirius-frontend/actions/toogle-layers-action.ts","sirius-frontend/app/tools-utils.ts","sirius-frontend/app/standalone.ts","components/viewer/RepresentationViewer.tsx","components/FolderContents.tsx","pages/ResourcePage.tsx","App.tsx","services/CommonServices.ts","serviceWorker.ts","index.tsx"],"names":["HOST","URI","concat","URI_API","URI_GRAPHQL","cache","InMemoryCache","client","ApolloClient","uri","Project","name","description","Object","classCallCheck","this","ProjectForm","state","project","saving","error","handleSave","_this","setState","mutate","mutation","gql","_templateObject3","variables","projectCreationDescription","kind","then","result","resetStore","undefined","data","createProject","success","props","onSubmit","handleSubmit","event","preventDefault","handleChange","target","value","classes","react_default","a","createElement","className","container","noValidate","autoComplete","TextField_default","id","label","style","margin","onChange","placeholder","fullWidth","buttons","IconButton_default","color","button","component","onClick","Save_default","React","Component","withStyles","theme","display","textField","marginLeft","spacing","unit","marginRight","width","dense","marginTop","menu","iconSmall","fontSize","justifyContent","AddProject","open","handleOpen","handleClose","handleAddProject","onRefresh","Fab_default","aria-label","fab","Add_default","Modal_default","aria-labelledby","aria-describedby","onClose","paper","Typography_default","variant","components_ProjectForm","extendedIcon","position","backgroundColor","palette","background","boxShadow","shadows","padding","outline","top","left","Breadcrumb","_Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","_this$props","projectName","pathArray","resourcePath","split","projectPath","computedPath","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","subPath","encodeURIComponent","push","path","err","return","Paper_default","root","Breadcrumbs_default","arial-label","Link_default","RouterLink","to","link","Home_default","icon","map","item","representationName","height","ProjectsPage","call","handleRefresh","refresh","projects","handleDelete","bind","assertThisInitialized","_this2","query","_templateObject","edges","viewer","forEach","edge","node","_this3","components_Breadcrumb","List_default","ListItem_default","history","ListItemAvatar_default","Avatar_default","Folder_default","ListItemText_default","primary","ListItemSecondaryAction_default","Delete_default","components_AddProject","_this4","_templateObject4","deleteProject","deleted","withRouter","Resource","isFolder","getTextFile","resource","FileServices_templateObject","filePath","res","resourceByPath","content","ResourceForm","folder","folderName","containerPath","FolderServices_templateObject2","createFolder","resourceName","fileName","FileServices_templateObject3","createFile","title","AddResource","handleAddResource","others","objectWithoutProperties","Code_default","components_ResourceForm","assign","deleteResource","lastIndex","lastIndexOf","substr","FolderServices_templateObject","deleteFolder","file","FileServices_templateObject4","deleteFile","ProjectPage","resources","components_AddResource","ResourceServices_templateObject","typename","__typename","install","editor","latexListener","services","options","length","m2p","MonacoToProtocolConverter","p2m","ProtocolToMonacoConverter","commands","MonacoCommands","languages","CustomMonacoLanguages","workspace","MonacoWorkspace","rootUri","window","ConsoleWindow","create","Services","_MonacoLanguages","selector","provider","provideDocumentHighlights","model","token","matchModel","MonacoModelIdentifier","fromModel","params","asTextDocumentPositionParams","documentHighlights","asDocumentHighlights","MonacoLanguages","monaco","require","normalizeUrl","ReconnectingWebSocket","register","extensions","aliases","toUpperCase","mimetypes","setMonarchTokensProvider","keywords","typeKeywords","operators","symbols","escapes","tokenizer","cases","@typeKeywords","@keywords","@default","include","@operators","log","bracket","comment","string","whitespace","LSPServices","service","domContainer","initialValue","createModel","Uri","parse","glyphMargin","lightbulb","enabled","url","createUrl","webSocket","maxReconnectionDelay","minReconnectionDelay","reconnectionDelayGrowFactor","connectionTimeout","maxRetries","Infinity","debug","listen","onConnection","connection","disposable","createLanguageClient","start","dispose","get","getModel","MonacoLanguageClient","clientOptions","documentSelector","errorHandler","ErrorAction","Continue","closed","CloseAction","DoNotRestart","connectionProvider","closeHandler","Promise","resolve","createConnection","host","port","protocol","location","NablaEditor","editorDom","lspService","formula","innerHeight","innerWidth","createRef","save","handleKeyDown","updateDimensions","dom","current","createLSPEditor","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_S","alert","addEventListener","deleteLSPEditor","removeEventListener","layout","buttonsWrapper","Button_default","size","classNames","leftIcon","ref","es","math","e","console","getValue","FileServices_templateObject2","updateTextFile","text-align","DefaultViewer","CircularProgress_default","AIRDResource","representations","Representation","desc","RepresentationDesc","viewpointName","getAIRDResource","SiriusServices_templateObject","representationIter","inc","rep","viewpoint","AIRDViewer","airdResource","representation","InsertChart_default","RequestLayersAction","KIND","RequestToolsAction","SetLayersAction","layers","SetToolsAction","tools","JSX","snabbdom","SiriusEdgeView","_PolylineEdgeView","segments","context","styleObject","JSON","fill","lineStyle","firstPoint","strokeWidth","x","y","i","p","class-sprotty-edge","d","source","renderSource","renderTarget","toConsumableArray","p1","p2","renderArrow","sourceArrow","targetArrow","arrowType","isOutput","offsetX","rotation","toDegrees","angle","rotationX","rotationY","buildPath","isFill","stroke","basicArrowPath","translateX","translateY","rotationAngle","transform","class-edge","class-arrow","PolylineEdgeView","SiriusFreeFormFlatContainerNodeView","_RectangularNodeView","rect","class-selected","selected","class-mouseover","hoverFeedback","rx","ry","Math","max","bounds","renderChildren","RectangularNodeView","SiriusListFlatContainerNodeView","SiriusSquareBorderNodeView","SiriusSvgBorderNodeView","href","SiriusLabelView","_SLabelView","attrs","class-sprotty-label","vnode","text","subType","getSubType","setAttr","SLabelView","SiriusSquareNodeView","SiriusSVGNodeView","svgData","SiriusGraphFactory","_SGraphFactory","schema","parent","isPreRenderedSchema","initializeChild","PreRenderedElement","esm_get","prototype","isHtmlRootSchema","initializeRoot","HtmlRoot","getBasicType","SGraphFactory","siriusPopupModelFactory","request","element","type","children","code","SiriusWebSocketDiagramServer","_WebSocketDiagramServ","registry","action","WebSocketDiagramServer","siriusContainerModule","ContainerModule","unbind","isBound","rebind","TYPES","ILogger","ConsoleLogger","inSingletonScope","LogLevel","toConstantValue","IModelFactory","PopupModelFactory","createContainer","containerId","Container","load","defaultModule","selectModule","moveModule","boundsModule","undoRedoModule","viewportModule","hoverModule","exportModule","ModelSource","overrideViewerOptions","needsClientLayout","needsServerLayout","baseDiv","hiddenDiv","viewRegistry","ViewRegistry","SGraphView","SCompartmentView","HtmlRootView","PreRenderedView","ExecuteContainerCreationToolAction","toolName","TYPE","ExecuteNodeCreationToolAction","ExecuteToolAction","ToggleLayerAction","layerName","newState","createDOMElementsForTools","diagramServer","toolPaletteElement","document","getElementById","tool","setAttribute","toolLabel","image","imageSource","includes","appendChild","textContent","toolAction","toolType","createToolAction","handle","createDOMElementForLayers","layerPaletteElement","layer","layerId","layerContainerElement","layerLabelElement","layerCheckboxElement","isActive","eventTarget","layerAction","createLayerAction","checked","cleanDOMElement","removeChild","SetLayersActionHandler","handleSetLayersAction","SetToolsActionHandler","handleSetToolsAction","filter","canHandle","canHandleTool","RepresentationViewer","siriusDom","defaultProject","defaultAird","defaultRepresentationName","domId","websocket","WebSocket","actionHandlerRegistry","ActionHandlerRegistry","URL","parameters","URLSearchParams","search","aird","clientId","random","RequestModelAction","initializeSiriusDiagram","FolderContents","prevProps","ResourceServices_templateObject2","getSubResources","ResourcePage","resourceContent","components_FolderContents","endsWith","components_editors_NablaEditor","viewer_RepresentationViewer","viewer_AIRDViewer","viewer_DefaultViewer","_this$props2","ResourceServices_templateObject3","App","loading","servicesAvailable","fetch","method","mode","catch","serviceRespond","AppBar_default","Toolbar_default","version","Switch","Route","exact","render","_ref2","match","_len2","Array","_key2","pages_ResourcePage","decodeURIComponent","_ref","_len","_key","_ref3","_len3","_key3","pages_ProjectPage","flexGrow","footer","background-color","min-height","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c582fda3.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nexport const FEATURE = \"NabLab\";\nexport const LANGUAGE_ID = \"nabla\";\nexport const HOST = \"localhost\";\nexport const PORT = \"8080\";\n\nexport const URI = `http://${HOST}:${PORT}`;\nexport const URI_API = `${URI}/api`;\nexport const URI_GRAPHQL = `${URI_API}/graphql`;\n\nconst cache = new InMemoryCache();\nexport const client = new ApolloClient({\n  uri: URI_GRAPHQL,\n  cache\n});\n","import gql from \"graphql-tag\";\nimport { client } from \"./const\";\nexport class Project {\n  constructor(public name: string, public description: string) {}\n}\n\nexport function getProjects(): Promise<Project[]> {\n  return client\n    .query<any>({\n      query: gql`\n        query {\n          viewer {\n            projects(first: 10, after: null) {\n              edges {\n                node {\n                  name\n                }\n              }\n            }\n          }\n        }\n      `\n    })\n    .then(result => {\n      const edges = result.data.viewer.projects.edges;\n      const projects: Project[] = [];\n      edges.forEach(edge => {\n        const name = edge.node.name;\n        const description = edge.node.description;\n        projects.push(new Project(name, description));\n      });\n      return projects;\n    });\n}\n\nexport function getProject(name: string): Promise<Project> {\n  return client\n    .query<any>({\n      query: gql`\n        query {\n          viewer {\n            project(name: $projectName) {\n              name\n            }\n          }\n        }\n      `\n    })\n    .then(result => {\n      const project = result.data.viewer.project;\n      const name = project.node.name;\n      const description = project.node.description;\n      return new Project(name, description);\n    });\n}\n\nexport function createProject(name: string): Promise<boolean> {\n  return client\n    .mutate<any>({\n      mutation: gql`\n        mutation($projectCreationDescription: ProjectCreationDescription!) {\n          createProject(description: $projectCreationDescription) {\n            description\n          }\n        }\n      `,\n      variables: {\n        projectCreationDescription: {\n          kind: \"default\",\n          name\n        }\n      }\n    })\n    .then(result => {\n      client.resetStore();\n      return result.data.createProject !== undefined;\n    });\n}\n\nexport function deleteProject(projectName: string): Promise<boolean> {\n  return client\n    .mutate<any>({\n      mutation: gql`\n        mutation($projectName: String!) {\n          deleteProject(projectName: $projectName)\n        }\n      `,\n      variables: {\n        projectName: projectName\n      }\n    })\n    .then(result => {\n      client.resetStore();\n      return result.data.deleteProject !== undefined;\n    });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { createProject } from \"../services/ProjectServices\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nconst styles = theme => ({\n  container: {\n    display: \"flex\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    width: \"100 %\"\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit\n  }\n});\n\nclass ProjectForm extends React.Component {\n  state = {\n    project: \"\",\n    saving: false,\n    error: false\n  };\n\n  handleSave = () => {\n    this.setState({ saving: true });\n    createProject(this.state.project).then(success => {\n      if (success) {\n        this.props.onSubmit();\n      } else {\n        this.setState({ saving: false, error: true });\n      }\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.handleSave();\n  };\n\n  handleChange = event => {\n    this.setState({ project: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className={classes.container}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField\n          id=\"standard-full-width\"\n          label=\"Name\"\n          style={{ margin: 8 }}\n          onChange={this.handleChange}\n          placeholder=\"Edit the project name here\"\n          fullWidth\n          margin=\"normal\"\n        />\n        <div className={classes.buttons}>\n          <IconButton\n            color=\"primary\"\n            className={classes.button}\n            component=\"span\"\n            onClick={this.handleSave}\n          >\n            <SaveIcon />\n            Save\n          </IconButton>\n        </div>\n      </form>\n    );\n  }\n}\n\nProjectForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ProjectForm);\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\n\nimport ProjectForm from \"./ProjectForm\";\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit\n  },\n  paper: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\",\n    top: `25%`,\n    left: `25%`\n  }\n});\n\nclass AddProject extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleAddProject = () => {\n    this.props.onRefresh();\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <span>\n        <Fab\n          color=\"primary\"\n          aria-label=\"Add\"\n          className={classes.fab}\n          onClick={this.handleOpen}\n        >\n          <AddIcon />\n        </Fab>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div className={classes.paper}>\n            <Typography variant=\"h6\" id=\"modal-title\">\n              Create a project\n            </Typography>\n            <Typography variant=\"subtitle1\" id=\"simple-modal-description\" />\n            <ProjectForm onSubmit={this.handleAddProject} />\n          </div>\n        </Modal>\n      </span>\n    );\n  }\n}\n\nexport default withStyles(styles)(AddProject);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Breadcrumbs from \"@material-ui/lab/Breadcrumbs\";\n\nimport Link from \"@material-ui/core/Link\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst styles = theme => ({\n  root: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n  },\n  link: {\n    display: \"flex\"\n  },\n  icon: {\n    marginRight: theme.spacing.unit / 2,\n    width: 20,\n    height: 20\n  }\n});\n\nexport class Breadcrumb extends Component {\n  render() {\n    const { classes, projectName } = this.props;\n    const pathArray =\n      this.props.resourcePath !== undefined\n        ? this.props.resourcePath.split(\"/\")\n        : [];\n    const projectPath = [];\n    let computedPath = \"\";\n    for (let subPath of pathArray) {\n      computedPath += \"/\" + encodeURIComponent(subPath);\n      projectPath.push({ path: computedPath, name: subPath });\n    }\n    return (\n      <Paper className={classes.root}>\n        <Breadcrumbs arial-label=\"Breadcrumb\">\n          <Link\n            component={RouterLink}\n            color=\"inherit\"\n            to={\"/\"}\n            className={classes.link}\n          >\n            <HomeIcon className={classes.icon} />\n          </Link>\n          {projectName !== undefined && (\n            <Link\n              component={RouterLink}\n              color=\"inherit\"\n              to={\"/\" + projectName}\n              className={classes.link}\n            >\n              <Typography color=\"textPrimary\" className={classes.link}>\n                {projectName}\n              </Typography>\n            </Link>\n          )}\n          {projectPath.map(item => (\n            <Link\n              component={RouterLink}\n              color=\"inherit\"\n              to={\"/\" + projectName + item.path}\n              className={classes.link}\n              key={item.path}\n            >\n              <Typography\n                color=\"textPrimary\"\n                className={classes.link}\n                key={item.name}\n              >\n                {item.name}\n              </Typography>\n            </Link>\n          ))}\n\n          {this.props.representationName !== undefined && (\n            <Typography color=\"textPrimary\" className={classes.link}>\n              {this.props.representationName}\n            </Typography>\n          )}\n        </Breadcrumbs>\n      </Paper>\n    );\n  }\n}\n\nBreadcrumb.propTypes = {\n  classes: PropTypes.object.isRequired,\n  projectName: PropTypes.string,\n  resourcePath: PropTypes.string\n};\n\nexport default withStyles(styles)(Breadcrumb);\n","import React, { Component } from \"react\";\nimport AddProject from \"../components/AddProject\";\nimport Breadcrumb from \"../components/Breadcrumb\";\nimport {\n  getProjects,\n  Project,\n  deleteProject\n} from \"../services/ProjectServices\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n\ninterface Props extends RouteComponentProps<any> {}\n\ninterface State {\n  projects: Project[];\n}\n\nexport class ProjectsPage extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = { projects: [] };\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  refresh() {\n    getProjects().then(projects => {\n      this.setState({ projects });\n    });\n  }\n\n  handleRefresh = () => {\n    this.refresh();\n  };\n  render() {\n    return (\n      <div>\n        <Breadcrumb />\n        <List component=\"nav\">\n          {this.state.projects.map(project => (\n            <ListItem\n              button\n              key={project.name}\n              onClick={() => {\n                this.props.history.push(\"/\" + project.name);\n              }}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <FolderIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={project.name} />\n              <ListItemSecondaryAction>\n                <IconButton\n                  aria-label=\"Delete\"\n                  onClick={this.handleDelete.bind(this, project.name)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n        <AddProject onRefresh={this.handleRefresh.bind(this)} />\n      </div>\n    );\n  }\n\n  handleDelete(projectName) {\n    deleteProject(projectName).then(deleted => {\n      if (deleted) {\n        this.refresh();\n      }\n    });\n  }\n}\nexport default withRouter(ProjectsPage);\n","export class Resource {\n  constructor(\n    public project: string,\n    public name: string,\n    public path: string,\n    public isFolder?: boolean\n  ) {}\n}\n","import gql from \"graphql-tag\";\nimport { client } from \"./const\";\nimport { Resource } from \"../dto/Resource\";\n\nexport function getTextFile(resource: Resource): Promise<string> {\n  return client\n    .query<any>({\n      query: gql`\n        query($projectName: String!, $filePath: String!) {\n          viewer {\n            project(name: $projectName) {\n              resourceByPath(path: $filePath) {\n                ... on File {\n                  content\n                }\n              }\n            }\n          }\n        }\n      `,\n      variables: {\n        projectName: resource.project,\n        filePath: resource.path\n      }\n    })\n    .then(result => {\n      let res = \"\";\n      if (result.data.viewer.project !== undefined) {\n        res = result.data.viewer.project.resourceByPath.content;\n      }\n      return res;\n    });\n}\n\nexport function updateTextFile(\n  resource: Resource,\n  content: string\n): Promise<boolean> {\n  return client\n    .mutate<any>({\n      mutation: gql`\n        mutation($projectName: String!, $filePath: String!, $content: String!) {\n          updateTextFile(\n            projectName: $projectName\n            filePath: $filePath\n            description: { content: $content }\n          ) {\n            name\n          }\n        }\n      `,\n      variables: {\n        projectName: resource.project,\n        filePath: resource.path,\n        content: content\n      }\n    })\n    .then(result => {\n      client.resetStore();\n      return result.data.updateTextFile !== undefined;\n    });\n}\nexport function createFile(\n  container: Resource | string,\n  fileName: string\n): Promise<boolean> {\n  let projectName;\n  let containerPath;\n  if (container instanceof Resource) {\n    projectName = container.project;\n    containerPath = container.path;\n  } else {\n    projectName = container;\n    containerPath = \"\";\n  }\n  // To debug\n  return client\n    .mutate<any>({\n      mutation: gql`\n        mutation(\n          $projectName: String!\n          $containerPath: String!\n          $description: FileCreationDescription!\n        ) {\n          createFile(\n            projectName: $projectName\n            containerPath: $containerPath\n            description: $description\n          ) {\n            name\n          }\n        }\n      `,\n      variables: {\n        projectName: projectName,\n        containerPath: containerPath,\n        description: {\n          kind: \"plain/text\",\n          name: fileName\n        }\n      }\n    })\n    .then(result => {\n      client.resetStore();\n      return result.data.createFile !== undefined;\n    });\n}\n\nexport function deleteFile(file: Resource): Promise<any> {\n  const lastIndex = file.path.lastIndexOf(\"/\");\n  let containerPath = lastIndex > 0 ? file.path.substr(0, lastIndex) : \"\";\n\n  return client\n    .mutate<any>({\n      mutation: gql`\n        mutation(\n          $projectName: String!\n          $containerPath: String!\n          $fileName: String!\n        ) {\n          deleteFile(\n            projectName: $projectName\n            containerPath: $containerPath\n            fileName: $fileName\n          )\n        }\n      `,\n      variables: {\n        projectName: file.project,\n        containerPath: containerPath,\n        fileName: file.name\n      }\n    })\n    .then(result => {\n      client.resetStore();\n      return result.data.deleteFile !== undefined;\n    });\n}\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { Resource } from \"../dto/Resource\";\nimport { createFile } from \"../services/FileServices\";\nimport { createFolder } from \"../services/FolderServices\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    width: \"100 %\"\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit\n  }\n});\n\ninterface Props {\n  container: Resource | string;\n  folder?: boolean;\n  history: History;\n\n  classes: any;\n  onSubmit: () => void;\n}\n\ninterface State {\n  resourceName: string;\n  saving: boolean;\n  error: boolean;\n}\n\nclass ResourceForm extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = { resourceName: \"\", saving: false, error: false };\n  }\n\n  handleSave = () => {\n    this.setState({ saving: true });\n    const createFn = this.props.folder\n      ? createFolder(this.props.container, this.state.resourceName)\n      : createFile(this.props.container, this.state.resourceName);\n    createFn.then(success => {\n      if (success) {\n        this.props.onSubmit();\n      } else {\n        this.setState({ saving: false, error: true });\n      }\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.handleSave();\n  };\n\n  handleChange = event => {\n    this.setState({ resourceName: event.target.value });\n  };\n\n  render() {\n    const { classes, folder, container } = this.props;\n    const title = folder\n      ? \"Edit the folder name here\"\n      : \" Edit the file name here\";\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className={classes.container}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField\n          id=\"standard-full-width\"\n          label=\"Name\"\n          style={{ margin: 8 }}\n          onChange={this.handleChange}\n          placeholder={title}\n          fullWidth\n          margin=\"normal\"\n        />\n        <div className={classes.buttons}>\n          <IconButton\n            color=\"primary\"\n            className={classes.button}\n            component=\"span\"\n            onClick={this.handleSave}\n          >\n            <SaveIcon />\n            Save\n          </IconButton>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withStyles(styles)(ResourceForm);\n","import gql from \"graphql-tag\";\nimport { client } from \"./const\";\nimport { Resource } from \"../dto/Resource\";\nexport function deleteFolder(folder: Resource): Promise<boolean> {\n  const lastIndex = folder.path.lastIndexOf(\"/\");\n  let containerPath = lastIndex > 0 ? folder.path.substr(0, lastIndex) : \"\";\n  return client\n    .mutate<any>({\n      mutation: gql`\n        mutation(\n          $projectName: String!\n          $containerPath: String!\n          $folderName: String!\n        ) {\n          deleteFolder(\n            projectName: $projectName\n            containerPath: $containerPath\n            name: $folderName\n          )\n        }\n      `,\n      variables: {\n        projectName: folder.project,\n        containerPath: containerPath,\n        folderName: folder.name\n      }\n    })\n    .then(result => {\n      client.resetStore();\n      return result.data.deleteFolder !== undefined;\n    });\n}\n\nexport function createFolder(\n  container: Resource | string,\n  folderName: string\n): Promise<boolean> {\n  let projectName;\n  let containerPath;\n  if (container instanceof Resource) {\n    projectName = container.project;\n    containerPath = container.path;\n  } else {\n    projectName = container;\n    containerPath = \"\";\n  }\n  // To debug\n  return client\n    .mutate<any>({\n      mutation: gql`\n        mutation(\n          $projectName: String!\n          $containerPath: String!\n          $folderName: String!\n        ) {\n          createFolder(\n            projectName: $projectName\n            containerPath: $containerPath\n            name: $folderName\n          ) {\n            name\n          }\n        }\n      `,\n      variables: {\n        projectName: projectName,\n        containerPath: containerPath,\n        folderName: folderName\n      }\n    })\n    .then(result => {\n      client.resetStore();\n      return result.data.createFolder !== undefined;\n    });\n}\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport ResourceForm from \"./ResourceForm\";\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit\n  },\n  paper: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\",\n    top: `25%`,\n    left: `25%`\n  }\n});\n\nclass AddResource extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleAddResource = () => {\n    this.props.onRefresh();\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, folder, ...others } = this.props;\n    const title = folder ? \" Create a folder\" : \" Create a file\";\n    return (\n      <span>\n        <Fab\n          color=\"primary\"\n          aria-label=\"Add\"\n          className={classes.fab}\n          onClick={this.handleOpen}\n        >\n          <AddIcon />\n          {folder ? <FolderIcon /> : <CodeIcon />}\n        </Fab>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div className={classes.paper}>\n            <Typography variant=\"h6\" id=\"modal-title\">\n              {title}\n            </Typography>\n            <Typography variant=\"subtitle1\" id=\"simple-modal-description\" />\n            <ResourceForm\n              folder={folder}\n              {...others}\n              onSubmit={this.handleAddResource}\n            />\n          </div>\n        </Modal>\n      </span>\n    );\n  }\n}\n\nexport default withStyles(styles)(AddResource);\n","import gql from \"graphql-tag\";\nimport { client } from \"./const\";\nimport { deleteFile } from \"./FileServices\";\nimport { deleteFolder } from \"./FolderServices\";\n\nimport { Resource } from \"../dto/Resource\";\n\nexport function getRootResources(projectName: string): Promise<Resource[]> {\n  return client\n    .query<any>({\n      query: gql`\n        query($projectName: String!) {\n          viewer {\n            project(name: $projectName) {\n              resources(first: 10, after: null) {\n                edges {\n                  node {\n                    name\n                    path\n                    __typename\n                  }\n                }\n              }\n            }\n          }\n        }\n      `,\n      variables: {\n        projectName: projectName\n      }\n    })\n    .then(result => {\n      const edges = result.data.viewer.project.resources.edges;\n      const resources: Resource[] = [];\n      edges.forEach(edge => {\n        const name = edge.node.name;\n        const path = edge.node.path;\n        const typename = edge.node.__typename;\n        resources.push(\n          new Resource(projectName, name, path, \"Folder\" === typename)\n        );\n      });\n      return resources;\n    });\n}\n\nexport function getSubResources(resource: Resource): Promise<Resource[]> {\n  return client\n    .query<any>({\n      query: gql`\n        query($projectName: String!, $filePath: String!) {\n          viewer {\n            project(name: $projectName) {\n              resourceByPath(path: $filePath) {\n                ... on Folder {\n                  resources(first: 10, after: null) {\n                    edges {\n                      node {\n                        name\n                        path\n                        __typename\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `,\n      variables: {\n        projectName: resource.project,\n        filePath: resource.path\n      }\n    })\n    .then(result => {\n      const edges = result.data.viewer.project.resourceByPath.resources.edges;\n      const resources: Resource[] = [];\n      edges.forEach(edge => {\n        const name = edge.node.name;\n        const path = edge.node.path;\n        const typename = edge.node.__typename;\n        resources.push(\n          new Resource(resource.project, name, path, \"Folder\" === typename)\n        );\n      });\n      return resources;\n    });\n}\n\nexport function getResource(\n  projectName: string,\n  path: string\n): Promise<Resource> {\n  return client\n    .query<any>({\n      query: gql`\n        query($projectName: String!, $filePath: String!) {\n          viewer {\n            project(name: $projectName) {\n              resourceByPath(path: $filePath) {\n                name\n                path\n                __typename\n              }\n            }\n          }\n        }\n      `,\n      variables: {\n        projectName: projectName,\n        filePath: path\n      }\n    })\n    .then(result => {\n      const resourceByPath = result.data.viewer.project.resourceByPath;\n      const name = resourceByPath.name;\n      const path = resourceByPath.path;\n      const typename = resourceByPath.__typename;\n      return new Resource(projectName, name, path, \"Folder\" === typename);\n    });\n}\n\nexport function deleteResource(resource: Resource): Promise<boolean> {\n  if (resource.isFolder) {\n    return deleteFolder(resource);\n  } else {\n    return deleteFile(resource);\n  }\n}\n","import React, { Component } from \"react\";\n\nimport AddResource from \"../components/AddResource\";\n\nimport { Resource } from \"../dto/Resource\";\nimport { getRootResources, deleteResource } from \"../services/ResourceServices\";\n\nimport Breadcrumb from \"../components/Breadcrumb\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { History } from \"history\";\ninterface Props extends RouteComponentProps<any> {\n  projectName: string;\n  history: History;\n}\n\ninterface State {\n  resources: Resource[];\n}\nclass ProjectPage extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = { resources: [] };\n  }\n\n  render() {\n    return (\n      <div>\n        <Breadcrumb projectName={this.props.projectName} />\n        <List component=\"nav\">\n          {this.state.resources.map(resource => (\n            <ListItem\n              button\n              key={resource.path}\n              onClick={() => {\n                this.props.history.push(\n                  \"/\" +\n                    this.props.projectName +\n                    \"/\" +\n                    encodeURIComponent(resource.path)\n                );\n              }}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  {resource.isFolder ? <FolderIcon /> : <CodeIcon />}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={resource.name} />\n              <ListItemSecondaryAction>\n                <IconButton\n                  aria-label=\"Delete\"\n                  onClick={this.handleDelete.bind(this, resource)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n        <AddResource\n          {...this.props}\n          container={this.props.projectName}\n          onRefresh={this.handleRefresh.bind(this)}\n        />\n        <AddResource\n          {...this.props}\n          folder={true}\n          container={this.props.projectName}\n          onRefresh={this.handleRefresh.bind(this)}\n        />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  refresh() {\n    getRootResources(this.props.projectName).then(resources => {\n      this.setState({ resources });\n    });\n  }\n\n  handleDelete(resource: Resource) {\n    deleteResource(resource).then(deleted => {\n      if (deleted) {\n        this.refresh();\n      }\n    });\n  }\n\n  handleRefresh = () => {\n    this.refresh();\n  };\n}\n\nexport default withRouter(ProjectPage);\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\nimport {\n  MonacoToProtocolConverter,\n  ProtocolToMonacoConverter,\n  MonacoCommands,\n  MonacoLanguages,\n  MonacoWorkspace,\n  ConsoleWindow,\n  Services,\n  DocumentSelector,\n  MonacoModelIdentifier,\n  DocumentHighlightProvider\n} from \"monaco-languageclient\";\n\nexport interface MonacoServices extends Services {\n  commands: MonacoCommands;\n  languages: MonacoLanguages;\n  workspace: MonacoWorkspace;\n  window: ConsoleWindow;\n}\nexport interface Options {\n  rootUri?: string;\n}\nexport type Provider = () => MonacoServices;\nexport function create(\n  editor: monaco.editor.IStandaloneCodeEditor,\n  latexListener: (formula: string) => any,\n  options: Options = {}\n): MonacoServices {\n  const m2p = new MonacoToProtocolConverter();\n  const p2m = new ProtocolToMonacoConverter();\n  return {\n    commands: new MonacoCommands(editor),\n    languages: new CustomMonacoLanguages(p2m, m2p, latexListener),\n    workspace: new MonacoWorkspace(p2m, m2p, options.rootUri),\n    window: new ConsoleWindow()\n  };\n}\nexport function install(\n  editor: monaco.editor.IStandaloneCodeEditor,\n  latexListener: (formula: string) => any,\n  options: Options = {}\n): MonacoServices {\n  const services = create(editor, latexListener, options);\n  Services.install(services);\n  return services;\n}\nexport function get(): MonacoServices {\n  return Services.get() as MonacoServices;\n}\n\nexport class CustomMonacoLanguages extends MonacoLanguages {\n  constructor(\n    readonly p2m: ProtocolToMonacoConverter,\n    readonly m2p: MonacoToProtocolConverter,\n    private latexListener: (formula: string) => any\n  ) {\n    super(p2m, m2p);\n  }\n\n  protected createDocumentHighlightProvider(\n    selector: DocumentSelector,\n    provider: DocumentHighlightProvider\n  ): monaco.languages.DocumentHighlightProvider {\n    return {\n      provideDocumentHighlights: (model, position, token) => {\n        if (\n          !this.matchModel(selector, MonacoModelIdentifier.fromModel(model))\n        ) {\n          return [];\n        }\n        const params = this.m2p.asTextDocumentPositionParams(model, position);\n        return provider\n          .provideDocumentHighlights(params, token)\n          .then(result => {\n            const documentHighlights = this.p2m.asDocumentHighlights(result);\n            if (result.length > 0 && result[0][\"formula\"] !== undefined) {\n              this.latexListener(result[0][\"formula\"]);\n            }\n            return documentHighlights;\n          });\n      }\n    };\n  }\n}\n","import {\n  MonacoLanguageClient,\n  CloseAction,\n  ErrorAction,\n  createConnection\n} from \"monaco-languageclient\";\n\nimport { install, create, get } from \"./CustomMonacoService\";\n\nimport { listen, MessageConnection } from \"vscode-ws-jsonrpc\";\nimport { FEATURE, LANGUAGE_ID, HOST, PORT } from \"./const\";\nimport { Resource } from \"../dto/Resource\";\nconst monaco = require(\"monaco-editor-core\");\nconst normalizeUrl = require(\"normalize-url\");\nconst ReconnectingWebSocket = require(\"reconnecting-websocket\");\n\nmonaco.languages.register({\n  id: LANGUAGE_ID,\n  extensions: [\".\" + LANGUAGE_ID],\n  aliases: [LANGUAGE_ID.toUpperCase(), LANGUAGE_ID],\n  mimetypes: [\"text/\" + LANGUAGE_ID]\n});\nmonaco.languages.setMonarchTokensProvider(\"nabla\", {\n  // Set defaultToken to invalid to see what you do not tokenize yet\n  // defaultToken: 'invalid',\n\n  keywords: [\n    \"\\u2115\",\n    \"\\u211D\",\n    \"\\u211D\\u00B2\",\n    \"\\u211D\\u00B2\\u02E3\\u00B2\",\n    \"\\u211D\\u00B3\",\n    \"\\u211D\\u00B3\\u02E3\\u00B3\",\n    \"\\u213E\",\n    \"\\u2192\",\n    \"\\u2200\",\n    \"\\u2205\",\n    \"\\u2208\",\n    \"\\u25BA\",\n    \"\\u25C4\",\n    \"cell\",\n    \"connectivities\",\n    \"const\",\n    \"else\",\n    \"face\",\n    \"false\",\n    \"functions\",\n    \"if\",\n    \"module\",\n    \"node\",\n    \"true\",\n    \"with\"\n  ],\n\n  typeKeywords: [\n    \"boolean\",\n    \"double\",\n    \"byte\",\n    \"int\",\n    \"short\",\n    \"char\",\n    \"void\",\n    \"long\",\n    \"float\"\n  ],\n\n  operators: [\n    \"=\",\n    \">\",\n    \"<\",\n    \"!\",\n    \"~\",\n    \"?\",\n    \":\",\n    \"==\",\n    \"<=\",\n    \">=\",\n    \"!=\",\n    \"&&\",\n    \"||\",\n    \"++\",\n    \"--\",\n    \"+\",\n    \"-\",\n    \"*\",\n    \"/\",\n    \"&\",\n    \"|\",\n    \"^\",\n    \"%\",\n    \"<<\",\n    \">>\",\n    \">>>\",\n    \"+=\",\n    \"-=\",\n    \"*=\",\n    \"/=\",\n    \"&=\",\n    \"|=\",\n    \"^=\",\n    \"%=\",\n    \"<<=\",\n    \">>=\",\n    \">>>=\"\n  ],\n\n  // we include these common regular expressions\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n\n  // C# style strings\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // identifiers and keywords\n      [\n        /[a-zA-Z\\u0394-\\u03F2\\u220F-\\u221C_][a-zA-Z\\u0394-\\u03F20-9\\u2211_]*/,\n        {\n          cases: {\n            \"@typeKeywords\": \"keyword\",\n            \"@keywords\": \"keyword\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/[A-Z][\\w\\$]*/, \"type.identifier\"], // to show class names nicely\n\n      // whitespace\n      { include: \"@whitespace\" },\n\n      // delimiters and operators\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[<>](?!@symbols)/, \"@brackets\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@operators\": \"operator\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n\n      // @ annotations.\n      // As an example, we emit a debugging log message on these tokens.\n      // Note: message are supressed during the first load -- change some lines to see them.\n      [\n        /@\\s*[a-zA-Z_\\$][\\w\\$]*/,\n        { token: \"annotation\", log: \"annotation token: $0\" }\n      ],\n\n      // numbers\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F]+/, \"number.hex\"],\n      [/\\d+/, \"number\"],\n\n      // delimiter: after number because of .\\d floats\n      [/[;,.]/, \"delimiter\"],\n\n      // strings\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], // non-teminated string\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\n\n      // characters\n      [/'[^\\\\']'/, \"string\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\n      [/'/, \"string.invalid\"]\n    ],\n\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@push\"], // nested comment\n      [\"\\\\*/\", \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ]\n  }\n} as any);\n\nexport class LSPServices {\n  public service;\n\n  public createLSPEditor(\n    domContainer: HTMLElement,\n    resource: Resource,\n    initialValue: string,\n    latexListener: (formula: string) => any\n  ): monaco.editor.IStandaloneCodeEditor {\n    let model = monaco.editor.createModel(\n      initialValue,\n      LANGUAGE_ID,\n      monaco.Uri.parse(\n        `platform:/resource/${resource.project}/${resource.path}`\n      )\n    );\n\n    const editor: monaco.editor.IStandaloneCodeEditor = monaco.editor.create(\n      domContainer,\n      {\n        model: model,\n        glyphMargin: true,\n        lightbulb: {\n          enabled: true\n        }\n      }\n    );\n\n    // create the web socket\n    const url = this.createUrl(HOST, PORT);\n    const socketOptions = {\n      maxReconnectionDelay: 10000,\n      minReconnectionDelay: 1000,\n      reconnectionDelayGrowFactor: 1.3,\n      connectionTimeout: 10000,\n      maxRetries: Infinity,\n      debug: false\n    };\n    const webSocket = new ReconnectingWebSocket(url, undefined, socketOptions);\n    // listen when the web socket is opened\n    listen({\n      webSocket,\n      onConnection: connection => {\n        // create and start the language client\n        const languageClient = this.createLanguageClient(connection);\n        const disposable = languageClient.start();\n        connection.onClose(() => disposable.dispose());\n      }\n    });\n    this.service = install(<any>editor, latexListener);\n    return editor;\n  }\n\n  public deleteLSPEditor(editor: monaco.editor.IStandaloneCodeEditor) {\n    const service2 = get();\n    const model = editor.getModel();\n    if (model !== null) {\n      model.dispose();\n    }\n    editor.dispose();\n    var global = window;\n    var symbol = Symbol(\"Services\");\n    // hack to avoid \"Language Client services has been overriden\"\n    global[symbol] = undefined;\n  }\n\n  public createLanguageClient(\n    connection: MessageConnection\n  ): MonacoLanguageClient {\n    return new MonacoLanguageClient({\n      name: FEATURE,\n      clientOptions: {\n        // use a language id as a document selector\n        documentSelector: [LANGUAGE_ID],\n        // disable the default error handler\n        errorHandler: {\n          error: () => ErrorAction.Continue,\n          closed: () => CloseAction.DoNotRestart\n        }\n      },\n      // create a language client connection from the JSON RPC connection on demand\n      connectionProvider: {\n        get: (errorHandler, closeHandler) => {\n          return Promise.resolve(\n            createConnection(connection, errorHandler, closeHandler)\n          );\n        }\n      }\n    });\n  }\n\n  private createUrl(host: string, port: string): string {\n    const protocol = location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    return normalizeUrl(`${protocol}://${host}:${port}/${LANGUAGE_ID}/lsp`);\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./NablaEditor.css\";\nimport classNames from \"classnames\";\nimport { LSPServices } from \"../../services/LSPServices\";\nimport { getTextFile, updateTextFile } from \"../../services/FileServices\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport { Resource } from \"../../dto/Resource\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport MathJax from \"react-mathjax-preview\";\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit\n  },\n  button: {\n    margin: \"10px\"\n  },\n  buttonsWrapper: {\n    \"text-align\": \"left\"\n  }\n});\n\ninterface Props {\n  resource: Resource;\n  classes: Object;\n}\n\ninterface State {\n  formula: string | null;\n  height: number;\n  width: number;\n}\nclass NablaEditor extends Component<Props, State> {\n  private editorDom: React.RefObject<HTMLDivElement>;\n\n  private editor: monaco.editor.IStandaloneCodeEditor | null;\n\n  private lspService: LSPServices;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      formula: null,\n      height: window.innerHeight,\n      width: window.innerWidth\n    };\n    this.lspService = new LSPServices();\n    this.editorDom = React.createRef();\n    this.editor = null;\n    // This binding is necessary to make `this` work in the callback\n    this.save = this.save.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    const dom = this.editorDom.current;\n    const { resource } = this.props;\n    if (dom !== null) {\n      getTextFile(resource).then(content => {\n        this.editor = this.lspService.createLSPEditor(\n          dom,\n          resource,\n          content,\n          (formula: string) => {\n            this.setState({ formula: \"$$\" + formula + \"$$\" });\n          }\n        );\n        var myBinding = this.editor.addCommand(\n          monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S,\n          function() {\n            alert(\"SAVE pressed!\");\n          },\n          \"toto\"\n        );\n      });\n    }\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillUnmount() {\n    if (this.editor !== null) {\n      this.lspService.deleteLSPEditor(this.editor);\n    }\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  updateDimensions() {\n    this.setState({\n      height: window.innerHeight,\n      width: window.innerWidth\n    });\n\n    if (this.editor !== null) {\n      this.editor.layout();\n    }\n  }\n\n  render() {\n    const classes: any = this.props.classes;\n    const { formula } = this.state;\n    return (\n      <div className=\"editor-wrapper\">\n        <div className={classes.buttonsWrapper}>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            className={classes.button}\n            onClick={this.save}\n          >\n            <SaveIcon\n              className={classNames(classes.leftIcon, classes.iconSmall)}\n            />\n            Save\n          </Button>\n        </div>\n        <div ref={this.editorDom} className=\"editor\" />\n        <div>\n          {formula !== undefined && formula !== null && (\n            <MathJax math={formula} />\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  handleKeyDown(e: any) {\n    console.log(e);\n  }\n\n  save(e: any) {\n    if (this.editor !== null) {\n      const model = this.editor.getModel();\n      if (model !== null) {\n        const { resource } = this.props;\n        updateTextFile(resource, model.getValue()).then(() => {\n          console.log(\"Saved\");\n        });\n      }\n    }\n  }\n}\n\nexport default withStyles(styles)(NablaEditor);\n","import React, { Component } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport { getTextFile } from \"../../services/FileServices\";\nimport { Resource } from \"../../dto/Resource\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport MathJax from \"react-mathjax-preview\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\ninterface Props {\n  resource: Resource;\n}\n\ninterface State {\n  content: string | null;\n}\n\nclass DefaultViewer extends Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = { content: null };\n  }\n  render() {\n    const content = this.state.content;\n    if (content !== undefined && content !== null) {\n      return <pre>{content}</pre>;\n    }\n    return <CircularProgress />;\n  }\n\n  componentDidMount() {\n    const { resource } = this.props;\n    getTextFile(resource).then(content => {\n      this.setState({ content });\n    });\n  }\n}\nexport default DefaultViewer;\n","import { Resource } from \"./Resource\";\nimport { Representation } from \"./Representation\";\n\nexport class AIRDResource {\n  constructor(\n    public project: string,\n    public name: string,\n    public path: string,\n    public representations: Representation[]\n  ) {}\n}\n","import { RepresentationDesc } from \"./RepresentationDesc\";\n\nexport class Representation {\n  constructor(\n    public id: string,\n    public name: string,\n    public desc: RepresentationDesc\n  ) {}\n}\n","export class RepresentationDesc {\n  constructor(\n    public representationName: string,\n    public viewpointName: string\n  ) {}\n}\n","import gql from \"graphql-tag\";\nimport { client } from \"./const\";\nimport { Resource } from \"../dto/Resource\";\nimport { AIRDResource } from \"../dto/AIRDResource\";\nimport { Representation } from \"../dto/Representation\";\nimport { RepresentationDesc } from \"../dto/RepresentationDesc\";\n\nexport function getAIRDResource(resource: Resource): Promise<AIRDResource> {\n  return client\n    .query<any>({\n      query: gql`\n        query($projectName: String!, $filePath: String!) {\n          viewer {\n            project(name: $projectName) {\n              resourceByPath(path: $filePath) {\n                ... on File {\n                  representations(first: 10, after: null) {\n                    edges {\n                      node {\n                        ... on Diagram {\n                          name\n                          description {\n                            identifier\n                            viewpoint {\n                              identifier\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `,\n      variables: {\n        projectName: resource.project,\n        filePath: resource.path\n      }\n    })\n    .then(result => {\n      const representations: Representation[] = [];\n      if (\n        result.data.viewer.project.resourceByPath.representations.edges !==\n        undefined\n      ) {\n        const representationIter =\n          result.data.viewer.project.resourceByPath.representations.edges;\n        let inc = 1;\n        representationIter.forEach(rep => {\n          representations.push(\n            new Representation(\n              rep.node.name + inc,\n              rep.node.name,\n              new RepresentationDesc(\n                rep.node.description.name,\n                rep.node.description.viewpoint.name\n              )\n            )\n          );\n          inc++;\n        });\n      }\n      let res = new AIRDResource(\n        resource.project,\n        resource.name,\n        resource.path,\n        representations\n      );\n      return res;\n    });\n}\n","import React, { Component } from \"react\";\nimport { getTextFile } from \"../../services/FileServices\";\nimport { Resource } from \"../../dto/Resource\";\nimport { AIRDResource } from \"../../dto/AIRDResource\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { getAIRDResource } from \"../../services/SiriusServices\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport InsertChart from \"@material-ui/icons/InsertChart\";\n\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n\ninterface Props extends RouteComponentProps<any> {\n  resource: Resource;\n}\n\ninterface State {\n  content: string | null;\n  airdResource: AIRDResource | null;\n}\n\nclass AIRDViewer extends Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = { content: null, airdResource: null };\n  }\n  render() {\n    const airdResource = this.state.airdResource;\n    if (airdResource !== undefined && airdResource !== null) {\n      return (\n        <div>\n          <List component=\"nav\">\n            {airdResource.representations.map(representation => (\n              <ListItem\n                button\n                key={representation.id}\n                onClick={() => {\n                  this.props.history.push(\n                    \"/\" +\n                      airdResource.project +\n                      \"/\" +\n                      encodeURIComponent(airdResource.path) +\n                      \"/\" +\n                      encodeURIComponent(representation.name)\n                  );\n                }}\n              >\n                <ListItemAvatar>\n                  <Avatar>\n                    <InsertChart />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={representation.name} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      );\n    }\n    return <CircularProgress />;\n  }\n\n  componentDidMount() {\n    const { resource } = this.props;\n    getAIRDResource(resource).then(airdResource => {\n      this.setState({ airdResource });\n    });\n    getTextFile(resource).then(content => {\n      this.setState({ content });\n    });\n  }\n}\nexport default withRouter(AIRDViewer);\n","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { Action } from 'sprotty/lib';\n\n/**\n * Action used to retrieve the layers of the diagram.\n *\n * @gcoutable\n */\nexport class RequestLayersAction implements Action {\n\n  /**\n   * The kind of the action.\n   */\n  public static readonly KIND = 'requestLayers';\n\n  /**\n   * The kind of the action.\n   */\n  public readonly kind = RequestLayersAction.KIND;\n}","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { Action } from 'sprotty/lib';\n\n/**\n * Action used to retrieve the tools of the diagram.\n *\n * @gcoutable\n */\nexport class RequestToolsAction implements Action {\n\n  /**\n   * The kind of the action.\n   */\n  public static readonly KIND = 'requestTools';\n\n  /**\n   * The kind of the action.\n   */\n  public readonly kind = RequestToolsAction.KIND;\n}","/*******************************************************************************\r\n * Copyright (c) 2018 Obeo.\r\n * All rights reserved. This program and the accompanying materials\r\n * are made available under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution, and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *    Obeo - initial API and implementation\r\n *******************************************************************************/\r\nimport { Action } from 'sprotty/lib';\r\n\r\nimport { Layer } from '../types/layer';\r\n\r\n/**\r\n * Action used to set the layers of the diagram.\r\n *\r\n * @gcoutable\r\n */\r\nexport class SetLayersAction implements Action {\r\n  /**\r\n   * The kind of the action.\r\n   */\r\n  public static readonly KIND = 'setLayers';\r\n\r\n  /**\r\n   * The kind of the action.\r\n   */\r\n  public readonly kind = SetLayersAction.KIND;\r\n\r\n  /**\r\n   * The layers of the diagram.\r\n   */\r\n  public readonly layers: [ Layer ];\r\n\r\n  /**\r\n   * The constructor.\r\n   * @param layers The layers of the diagram\r\n   */\r\n  constructor(layers: [ Layer ]) {\r\n    this.layers = layers;\r\n  }\r\n}","/*******************************************************************************\r\n * Copyright (c) 2018 Obeo.\r\n * All rights reserved. This program and the accompanying materials\r\n * are made available under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution, and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *    Obeo - initial API and implementation\r\n *******************************************************************************/\r\nimport { Action } from 'sprotty/lib';\r\n\r\nimport { Tool } from '../types/tool';\r\n\r\n/**\r\n * Action used to set the tools of the diagram.\r\n *\r\n * @gcoutable\r\n */\r\nexport class SetToolsAction implements Action {\r\n  /**\r\n   * The kind of the action.\r\n   */\r\n  public static readonly KIND = 'setTools';\r\n\r\n  /**\r\n   * The kind of the action.\r\n   */\r\n  public readonly kind = SetToolsAction.KIND;\r\n\r\n  /**\r\n   * The tools of the diagram.\r\n   */\r\n  public readonly tools: [ Tool ];\r\n\r\n  /**\r\n   * The constructor.\r\n   * @param tools The tools of the diagram\r\n   */\r\n  constructor(tools: [ Tool ]) {\r\n    this.tools = tools;\r\n  }\r\n}","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { PolylineEdgeView, RenderingContext, SEdge, Point, toDegrees, angle } from 'sprotty/lib';\n\nimport { VNode } from 'snabbdom/vnode';\nimport * as snabbdom from 'snabbdom-jsx';\n\nconst JSX = { createElement: snabbdom.svg };\n\nconst STROKE_DASHARRAY = 'stroke-dasharray';\n\nconst DASH_PATTERN = '10,10';\nconst DOT_PATTERN = '3,3';\nconst DASH_DOT_PATTERN = '20,10,3,3,3,10';\n\n/**\n * The view used to display Sirius edges.\n *\n * @sbegaudeau\n * @hmarchadour\n */\nexport class SiriusEdgeView extends PolylineEdgeView {\n  /**\n   * Renders the line of the edge with a specific style configured.\n   * @param edge The edge\n   * @param segments The segments\n   * @param context The context\n   */\n  protected renderLine(edge: SEdge, segments: Point[], context: RenderingContext): VNode {\n    const style: string = (edge as any).style;\n    const styleObject = JSON.parse(style);\n    styleObject.fill = 'transparent';\n    switch ((edge as any).lineStyle) {\n      case 1:\n        // dash\n        styleObject[STROKE_DASHARRAY] = DASH_PATTERN;\n        break;\n      case 2:\n        // dot\n        styleObject[STROKE_DASHARRAY] = DOT_PATTERN;\n        break;\n      case 3:\n        // dash && dot\n        styleObject[STROKE_DASHARRAY] = DASH_DOT_PATTERN;\n        break;\n      default:\n        // solid nothing todo\n        break;\n    }\n    const firstPoint = segments[0];\n    const strokeWidth = styleObject !== undefined ? styleObject['stroke-width'] : 1;\n    let path = `M ${firstPoint.x + strokeWidth},${firstPoint.y}`;\n    for (let i = 1; i < segments.length; i++) {\n      const p = segments[i];\n      path += ` L ${p.x - strokeWidth},${p.y}`;\n    }\n    return JSX.createElement('path', { 'class-sprotty-edge': true, d: path, style: styleObject }, null);\n    //return <path class-sprotty-edge={true} d={path} style={styleObject} />;\n  }\n\n  /**\n   * Renders additionals element for the given Edge. This method is overriden in order to let\n   * us add decorators to the beggining or the end of the edge (to create an arrow for example).\n   * @param edge The edge\n   * @param segments The segments\n   * @param context The context\n   */\n  protected renderAdditionals(edge: SEdge, segments: Point[], context: RenderingContext): VNode[] {\n    const source = this.renderSource(edge, segments, context);\n    const target = this.renderTarget(edge, segments, context);\n    return [...source, ...target];\n  }\n\n  private renderSource(edge: SEdge, segments: Point[], context: RenderingContext): VNode[] {\n    const p1 = segments[1];\n    const p2 = segments[0];\n    const style: string = (edge as any).style;\n    const styleObject = JSON.parse(style);\n    return this.renderArrow(p1, p2, (edge as any).sourceArrow, styleObject);\n  }\n\n  private renderTarget(edge: SEdge, segments: Point[], context: RenderingContext): VNode[] {\n    const p1 = segments[segments.length - 2];\n    const p2 = segments[segments.length - 1];\n    const style: string = (edge as any).style;\n    const styleObject = JSON.parse(style);\n    return this.renderArrow(p1, p2, (edge as any).targetArrow, styleObject);\n  }\n\n  private renderArrow(p1: Point, p2: Point, arrowType: number, styleObject: any) {\n    const strokeWidth = styleObject !== undefined ? styleObject['stroke-width'] : 1;\n    const basicArrowPath = 'M 0,0 7,3.5 0,7';\n    switch (arrowType) {\n      // Output Arrow\n      case 1:\n      // Input Arrow\n      case 2: {\n        const isOutput = arrowType === 1;\n        styleObject.fill = 'transparent';\n        const offsetX = isOutput ? -7 + strokeWidth : -7 - strokeWidth;\n        const offsetY = -3.5;\n        const x = p2.x + offsetX;\n        const y = p2.y + offsetY;\n        const rotation = isOutput ? toDegrees(angle(p2, p1)) : toDegrees(angle(p1, p2));\n        const rotationX = p2.x;\n        const rotationY = p2.y;\n        return [this.buildPath(basicArrowPath, x, y, styleObject, rotation, rotationX, rotationY)];\n      }\n\n      // Output Closed Arrow\n      case 3:\n      // Input Closed Arrow\n      case 4:\n      // Output Fill Closed Arrow\n      case 5:\n      // Input Fill Closed Arrow\n      case 6: {\n        const isOutput = arrowType === 3 || arrowType === 5;\n        const isFill = arrowType === 5 || arrowType === 6;\n\n        styleObject.fill = isFill ? styleObject.stroke : 'white';\n        const offsetX = isOutput ? 0 + strokeWidth : -7 - strokeWidth;\n        const offsetY = -3.5;\n        const x = p2.x + offsetX;\n        const y = p2.y + offsetY;\n        const rotation = isOutput ? toDegrees(angle(p2, p1)) : toDegrees(angle(p1, p2));\n        const rotationX = p2.x;\n        const rotationY = p2.y;\n        return [this.buildPath(basicArrowPath + 'z', x, y, styleObject, rotation, rotationX, rotationY)];\n      }\n\n      // Diamond\n      case 7:\n      // Fill Diamond\n      case 8: {\n        const isFill = arrowType === 8;\n        styleObject.fill = isFill ? styleObject.stroke : 'white';\n        const offsetX = 0 + strokeWidth;\n        const offsetY = 0;\n        const x = p2.x + offsetX;\n        const y = p2.y + offsetY;\n        const rotation = toDegrees(angle(p2, p1));\n        const rotationX = p2.x;\n        const rotationY = p2.y;\n        return [this.buildPath('M 0,0 L 7,-3.5 L 14,0 L 7,3.5 z', x, y, styleObject, rotation, rotationX, rotationY)];\n      }\n\n      // Input Arrow With Diamond\n      case 9:\n      // Input Arrow With Fill Diamond\n      case 10: {\n        const isFill = arrowType === 10;\n        styleObject.fill = isFill ? styleObject.stroke : 'white';\n        const offsetX = 0 + strokeWidth;\n        const offsetY = 0;\n        const x = p2.x + offsetX;\n        const y = p2.y + offsetY;\n        const rotation = toDegrees(angle(p2, p1));\n        const rotationX = p2.x;\n        const rotationY = p2.y;\n        return [\n          this.buildPath(\n            'M 0,0 L 7,-3.5 L 14,0 L 7,3.5 z M 14,0 21,-3.5 14,0 21,3.5',\n            x,\n            y,\n            styleObject,\n            rotation,\n            rotationX,\n            rotationY\n          )\n        ];\n      }\n\n      default:\n        return [];\n    }\n  }\n\n  private buildPath(\n    path: string,\n    translateX: number,\n    translateY: number,\n    styleObject: any,\n    rotationAngle?: number,\n    rotationX?: number,\n    rotationY?: number\n  ): VNode {\n    let rotation = '';\n    if (rotationAngle !== undefined) {\n      if (rotationX !== undefined && rotationY !== undefined) {\n        rotation = `rotate(${rotationAngle} ${rotationX} ${rotationY})`;\n      } else {\n        rotation = `rotate(${rotationAngle})`;\n      }\n    }\n    const transform = `${rotation} translate(${translateX} ${translateY})`;\n\n    return JSX.createElement(\n      'path',\n      { 'class-edge': true, 'class-arrow': true, d: path, transform: transform, style: styleObject },\n      null\n    );\n    // return <path class-edge={true} class-arrow={true} d={path} transform={transform} style={styleObject} />;\n  }\n}\n","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { RenderingContext, SNode, RectangularNodeView } from 'sprotty/lib';\n\nimport { VNode } from 'snabbdom/vnode';\nimport * as snabbdom from 'snabbdom-jsx';\n\nconst JSX = { createElement: snabbdom.svg };\n\n/**\n * The view used to display free form containers with a flat style.\n *\n * @sbegaudeau\n */\nexport class SiriusFreeFormFlatContainerNodeView extends RectangularNodeView {\n  /**\n   * Renders the given node in the context.\n   * @param node The node\n   * @param context The context\n   */\n  public render(node: SNode, context: RenderingContext): VNode {\n    const style: string = (node as any).style;\n    const styleObject: any = JSON.parse(style);\n    const rect: any = JSX.createElement(\n      'rect',\n      {\n        'class-selected': node.selected,\n        'class-mouseover': node.hoverFeedback,\n        x: 0,\n        y: 0,\n        rx: '5',\n        ry: '5',\n        width: Math.max(0, node.bounds.width),\n        height: Math.max(0, node.bounds.height),\n        style: styleObject\n      },\n      null\n    );\n\n    return JSX.createElement('g', null, [rect, context.renderChildren(node)]);\n    /* return (\n      <g>\n        <rect\n          class-selected={node.selected}\n          class-mouseover={node.hoverFeedback}\n          x={0}\n          y={0}\n          rx=\"5\"\n          ry=\"5\"\n          width={Math.max(0, node.bounds.width)}\n          height={Math.max(0, node.bounds.height)}\n          style={styleObject}\n        />\n        {context.renderChildren(node)}\n      </g>\n    );*/\n  }\n}\n","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { RenderingContext, SNode, RectangularNodeView } from 'sprotty/lib';\n\nimport { VNode } from 'snabbdom/vnode';\nimport * as snabbdom from 'snabbdom-jsx';\n\nconst JSX = { createElement: snabbdom.svg };\n\n/**\n * The view used to display list containers with a flat style.\n *\n * @sbegaudeau\n */\nexport class SiriusListFlatContainerNodeView extends RectangularNodeView {\n  /**\n   * Renders the given node in the context.\n   * @param node The node\n   * @param context The context\n   */\n  public render(node: SNode, context: RenderingContext): VNode {\n    const style: string = (node as any).style;\n    const styleObject: any = JSON.parse(style);\n\n    const rect: any = JSX.createElement(\n      'rect',\n      {\n        'class-selected': node.selected,\n        'class-mouseover': node.hoverFeedback,\n        x: 0,\n        y: 0,\n        rx: '5',\n        ry: '5',\n        width: Math.max(0, node.bounds.width),\n        height: Math.max(0, node.bounds.height),\n        style: styleObject\n      },\n      null\n    );\n\n    return JSX.createElement('g', null, [rect, context.renderChildren(node)]);\n\n    /*\n    return (\n      <g>\n        <rect class-selected={node.selected}\n              class-mouseover={node.hoverFeedback}\n              x={0} y={0}\n              rx=\"5\" ry=\"5\"\n              width={Math.max(0, node.bounds.width)}\n              height={Math.max(0, node.bounds.height)}\n              style={styleObject} />\n        {context.renderChildren(node)}\n      </g>\n    );\n    */\n  }\n}\n","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { RenderingContext, SPort, RectangularNodeView } from 'sprotty/lib';\n\nimport { VNode } from 'snabbdom/vnode';\nimport * as snabbdom from 'snabbdom-jsx';\n\nconst JSX = { createElement: snabbdom.svg };\n\n/**\n * The view used to display a border node nodes with a square style.\n *\n * @hmarchadour\n */\nexport class SiriusSquareBorderNodeView extends RectangularNodeView {\n  /**\n   * Renders the given port in the context.\n   * @param port The port\n   * @param context The context\n   */\n  public render(port: SPort, context: RenderingContext): VNode {\n    const style: string = (port as any).style;\n    const styleObject: any = JSON.parse(style);\n    const rect: any = JSX.createElement(\n      'rect',\n      {\n        'class-selected': port.selected,\n        'class-mouseover': port.hoverFeedback,\n        x: 0,\n        y: 0,\n        rx: '5',\n        ry: '5',\n        width: Math.max(0, port.bounds.width),\n        height: Math.max(0, port.bounds.height),\n        style: styleObject\n      },\n      null\n    );\n\n    return JSX.createElement('g', null, [rect, context.renderChildren(port)]);\n    /*return (\n      <g>\n        <rect\n              class-selected={port.selected}\n              class-mouseover={port.hoverFeedback}\n              x={0} y ={0}\n              width={Math.max(5, port.bounds.width)}\n              height={Math.max(5, port.bounds.height)}\n              style={JSON.parse(style)} />\n        {context.renderChildren(port)}\n      </g>\n    );*/\n  }\n}\n","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { RenderingContext, SPort, RectangularNodeView } from 'sprotty/lib';\n\nimport { VNode } from 'snabbdom/vnode';\nimport * as snabbdom from 'snabbdom-jsx';\n\nconst JSX = { createElement: snabbdom.svg };\n\n/**\n * The view used to display an SVG border node.\n *\n * @hmarchadour\n */\nexport class SiriusSvgBorderNodeView extends RectangularNodeView {\n  /**\n   * Renders the given port in the context.\n   * @param port The port\n   * @param context The context\n   */\n  public render(port: SPort, context: RenderingContext): VNode {\n    const url = (port as any).url;\n    const rect: any = JSX.createElement(\n      'image',\n      {\n        x: 0,\n        y: 0,\n        width: '10',\n        height: '10',\n        href: url\n      },\n      null\n    );\n\n    return JSX.createElement('g', null, rect);\n\n    /* return (\n      <g>\n        <image x=\"0\" y=\"0\" height=\"10\" width=\"10\" href={url}/>\n      </g>\n    );¨*/\n  }\n}\n","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { RenderingContext, SLabel, SLabelView, getSubType, setAttr } from 'sprotty/lib';\n\nimport { VNode } from 'snabbdom/vnode';\nimport * as snabbdom from 'snabbdom-jsx';\n\n//const JSX = { createElement: snabbdom.svg };\n\n/**\n * The view used to display labels.\n *\n * @sbegaudeau\n */\nexport class SiriusLabelView extends SLabelView {\n  /**\n   * Renders the given label in the context.\n   * @param label The label\n   * @param context The context\n   */\n  public render(label: SLabel, context: RenderingContext): VNode {\n    const style: string = (label as any).style;\n    const styleObject = JSON.parse(style);\n\n    /*const vnode = (\n      <text class-sprotty-label={true} style={styleObject}>\n        {label.text}\n      </text>\n    );*/\n    const attrs: any = { 'class-sprotty-label': true, style: styleObject };\n    const vnode = snabbdom.svg('text', attrs, label.text);\n    const subType = getSubType(label);\n    if (subType) {\n      setAttr(vnode, 'class', subType);\n    }\n    return vnode;\n  }\n}\n","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { RenderingContext, SNode, RectangularNodeView } from 'sprotty/lib';\n\nimport { VNode } from 'snabbdom/vnode';\nimport * as snabbdom from 'snabbdom-jsx';\n\nconst JSX = { createElement: snabbdom.svg };\n\n/**\n * The view used to display nodes with a square style.\n *\n * @sbegaudeau\n */\nexport class SiriusSquareNodeView extends RectangularNodeView {\n  /**\n   * Renders the given node in the context.\n   * @param node The node\n   * @param context The context\n   */\n  public render(node: SNode, context: RenderingContext): VNode {\n    const style: string = (node as any).style;\n    const styleObject: any = JSON.parse(style);\n    const rect: any = JSX.createElement(\n      'rect',\n      {\n        'class-selected': node.selected,\n        'class-mouseover': node.hoverFeedback,\n        x: 0,\n        y: 0,\n        rx: '5',\n        ry: '5',\n        width: Math.max(0, node.bounds.width),\n        height: Math.max(0, node.bounds.height),\n        style: styleObject\n      },\n      null\n    );\n\n    return JSX.createElement('g', null, [rect, context.renderChildren(node)]);\n\n    /*return (\n      <g>\n        <rect class-selected={node.selected}\n              class-mouseover={node.hoverFeedback}\n              x={0} y={0}\n              rx=\"5\" ry=\"5\"\n              width={Math.max(0, node.bounds.width)}\n              height={Math.max(0, node.bounds.height)}\n              style={styleObject} />\n        {context.renderChildren(node)}\n      </g>\n    );*/\n  }\n}\n","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { RenderingContext, SNode, RectangularNodeView } from \"sprotty/lib\";\n\nimport { VNode } from \"snabbdom/vnode\";\nimport * as snabbdom from \"snabbdom-jsx\";\n\nconst JSX = { createElement: snabbdom.svg };\n\n/**\n * The view used to display nodes with an SVG image.\n */\nexport class SiriusSVGNodeView extends RectangularNodeView {\n  /**\n   * Renders the given node in the context.\n   * @param node The node\n   * @param context The context\n   */\n  public render(node: SNode, context: RenderingContext): VNode {\n    const svgData = (node as any).svgData;\n\n    const rect: any = JSX.createElement(\n      \"image\",\n      {\n        x: 0,\n        y: 0,\n        width: 30,\n        height: 30,\n        href: `data:image/svg+xml;utf,${svgData}`\n      },\n      null\n    );\n\n    return JSX.createElement(\"g\", null, [rect, context.renderChildren(node)]);\n\n    /*return (\n      <g>\n        <image x=\"0\" y=\"0\" href={`data:image/svg+xml;utf,${svgData}`} width={30} height={30} />\n        {context.renderChildren(node)}\n      </g>\n    );*/\n  }\n}\n","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport {\n  getBasicType,\n  HtmlRoot,\n  HtmlRootSchema,\n  SChildElement,\n  SGraphFactory,\n  SModelElementSchema,\n  SModelRootSchema,\n  SModelRoot,\n  SParentElement,\n  PreRenderedElement,\n  PreRenderedElementSchema\n} from 'sprotty/lib';\n\n/**\n * The Sirius graph factory used to create all the graph elements.\n *\n * @sbegaudeau\n */\nexport class SiriusGraphFactory extends SGraphFactory {\n  /**\n   * Creates the element with the given schema.\n   * @param schema The model element schema\n   * @param parent The parent element\n   */\n  public createElement(schema: SModelElementSchema, parent?: SParentElement): SChildElement {\n    /*if (this.isNodeSchema(schema)) {\n      return this.initializeChild(new SiriusNode(), schema, parent)\n    } else */\n    if (this.isPreRenderedSchema(schema)) {\n      return this.initializeChild(new PreRenderedElement(), schema, parent);\n    } else {\n      return super.createElement(schema, parent);\n    }\n  }\n\n  /**\n   * Creates the root for the given schema.\n   * @param schema The schema\n   */\n  public createRoot(schema: SModelRootSchema): SModelRoot {\n    if (this.isHtmlRootSchema(schema)) {\n      return this.initializeRoot(new HtmlRoot(), schema);\n    } else {\n      return super.createRoot(schema);\n    }\n  }\n\n  /**\n   * Indicates if the given schema is an HTML root schema.\n   * @param schema The model root schema\n   */\n  public isHtmlRootSchema(schema: SModelRootSchema): schema is HtmlRootSchema {\n    return getBasicType(schema) === 'html';\n  }\n\n  /**\n   * Indicates if the given schema is a pre-rendered schema.\n   * @param schema The model element schema\n   */\n  public isPreRenderedSchema(schema: SModelElementSchema): schema is PreRenderedElementSchema {\n    return getBasicType(schema) === 'pre-rendered';\n  }\n}\n","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport {\n  SModelElementSchema,\n  SModelRootSchema,\n  RequestPopupModelAction,\n  PreRenderedElementSchema\n} from 'sprotty/lib';\n\n/**\n * Creates a popup for the given action.\n * @param request The request popup model action\n * @param element The model element schema\n */\nexport const siriusPopupModelFactory = (request: RequestPopupModelAction, element?: SModelElementSchema): SModelRootSchema | undefined => {\n  if (element !== undefined && element.type === 'node:svg') {\n    return {\n      type: 'html',\n      id: 'popup',\n      children: [\n        <PreRenderedElementSchema> {\n          type: 'pre-rendered',\n          id: 'popup-title',\n          code: `<div class=\"popup-title\">Class ${element.id === 'node0' ? 'Foo' : 'Bar'}</div>`\n        },\n        <PreRenderedElementSchema> {\n          type: 'pre-rendered',\n          id: 'popup-body',\n          code: '<div class=\"popup-body\">Hello World</div>'\n        }\n      ]\n    };\n  }\n  return undefined;\n};\n","/*******************************************************************************\r\n * Copyright (c) 2018 Obeo.\r\n * All rights reserved. This program and the accompanying materials\r\n * are made available under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution, and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *    Obeo - initial API and implementation\r\n *******************************************************************************/\r\nimport { Action, ActionHandlerRegistry, WebSocketDiagramServer } from 'sprotty/lib';\r\n\r\n\r\n/**\r\n * The Sirius WebSocket diagram server used to communicate with the remote server.\r\n *\r\n * @gcoutable\r\n */\r\nexport class SiriusWebSocketDiagramServer extends WebSocketDiagramServer {\r\n\r\n  /**\r\n   * Initializes the given action handler registry.\r\n   * @param registry The action handler registry\r\n   */\r\n  public initialize(registry: ActionHandlerRegistry): void {\r\n    super.initialize(registry);\r\n  }\r\n\r\n  /**\r\n   * Handles the given action received by the server.\r\n   * @param action The action\r\n   */\r\n  public handle(action: Action) {\r\n    switch (action.kind) {\r\n      default:\r\n        super.handle(action);\r\n      break;\r\n    }\r\n  }\r\n}","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { Container, ContainerModule } from 'inversify';\n\nimport {\n  boundsModule,\n  defaultModule,\n  exportModule,\n  hoverModule,\n  moveModule,\n  selectModule,\n  undoRedoModule,\n  viewportModule,\n  overrideViewerOptions,\n  ConsoleLogger,\n  LogLevel,\n  ViewRegistry,\n  TYPES,\n  HtmlRootView,\n  PreRenderedView,\n  SCompartmentView,\n  SGraphView,\n  SLabelView\n} from 'sprotty/lib';\n\nimport { SiriusEdgeView } from './views/sirius-edge-view';\nimport { SiriusFreeFormFlatContainerNodeView } from './views/sirius-free-form-flat-container-node-view';\nimport { SiriusListFlatContainerNodeView } from './views/sirius-list-flat-container-node-view';\nimport { SiriusSquareBorderNodeView } from './views/sirius-square-border-node-view';\nimport { SiriusSvgBorderNodeView } from './views/sirius-svg-border-node-view';\nimport { SiriusLabelView } from './views/sirius-label-view';\nimport { SiriusSquareNodeView } from './views/sirius-square-node-view';\nimport { SiriusSVGNodeView } from './views/sirius-svg-node-view';\n\nimport { SiriusGraphFactory } from './sirius-graph-factory';\n\nimport { siriusPopupModelFactory } from './popup';\nimport { SiriusWebSocketDiagramServer } from './sirius-websocket-diagram-server';\n\nconst siriusContainerModule = new ContainerModule((bind, unbind, isBound, rebind) => {\n  rebind(TYPES.ILogger)\n    .to(ConsoleLogger)\n    .inSingletonScope();\n  rebind(TYPES.LogLevel).toConstantValue(LogLevel.log);\n  rebind(TYPES.IModelFactory)\n    .to(SiriusGraphFactory)\n    .inSingletonScope();\n  bind(TYPES.PopupModelFactory).toConstantValue(siriusPopupModelFactory);\n});\n\n/**\n * Create the dependency injection container.\n * @param containerId The identifier of the container\n */\nexport const createContainer = (containerId: string) => {\n  const container = new Container();\n  container.load(\n    defaultModule,\n    selectModule,\n    moveModule,\n    boundsModule,\n    undoRedoModule,\n    viewportModule,\n    hoverModule,\n    exportModule,\n    siriusContainerModule\n  );\n\n  container\n    .bind(TYPES.ModelSource)\n    .to(SiriusWebSocketDiagramServer)\n    .inSingletonScope();\n\n  overrideViewerOptions(container, {\n    needsClientLayout: true,\n    needsServerLayout: true,\n    baseDiv: containerId,\n    hiddenDiv: containerId + '-hidden'\n  });\n\n  const viewRegistry = container.get<ViewRegistry>(TYPES.ViewRegistry);\n  viewRegistry.register('graph', SGraphView);\n\n  viewRegistry.register('node:square', SiriusSquareNodeView);\n  viewRegistry.register('node:svg', SiriusSVGNodeView);\n  viewRegistry.register('port:square', SiriusSquareBorderNodeView);\n  viewRegistry.register('port:image', SiriusSvgBorderNodeView);\n  viewRegistry.register('node:freeformflatcontainer', SiriusFreeFormFlatContainerNodeView);\n  viewRegistry.register('node:listflatcontainer', SiriusListFlatContainerNodeView);\n  viewRegistry.register('comp:listflatcontainer_label', SCompartmentView);\n  viewRegistry.register('comp:listflatcontainer_body', SCompartmentView);\n\n  viewRegistry.register('edge:straight', SiriusEdgeView);\n\n  viewRegistry.register('label:inside-left', SiriusLabelView);\n  viewRegistry.register('label:inside-center', SiriusLabelView);\n  viewRegistry.register('label:inside-right', SiriusLabelView);\n  viewRegistry.register('label:outside-left', SiriusLabelView);\n  viewRegistry.register('label:outside-center', SiriusLabelView);\n  viewRegistry.register('label:outside-right', SiriusLabelView);\n\n  viewRegistry.register('label:text', SLabelView);\n  viewRegistry.register('comp:main', SCompartmentView);\n  viewRegistry.register('html', HtmlRootView);\n  viewRegistry.register('pre-rendered', PreRenderedView);\n\n  return container;\n};\n","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { Action } from 'sprotty/lib';\n\n/**\n * Action used to execute container creation tools.\n *\n * @sbegaudeau\n */\nexport class ExecuteContainerCreationToolAction implements Action {\n\n  /**\n   * The kind of the action.\n   */\n  public static readonly KIND = 'executeContainerCreationTool';\n\n  /**\n   * The type of the action.\n   */\n  public static readonly TYPE = 'ContainerCreationDescriptionImpl';\n\n  /**\n   * The kind of the action.\n   */\n  public readonly kind = ExecuteContainerCreationToolAction.KIND;\n\n  /**\n   * The name of the container creation tool to execute.\n   */\n  public readonly toolName: string;\n\n  /**\n   * The constructor.\n   * @param toolName The name of the tool to execute\n   */\n  constructor(toolName: string) {\n    this.toolName = toolName;\n  }\n\n}","/*******************************************************************************\r\n * Copyright (c) 2018 Obeo.\r\n * All rights reserved. This program and the accompanying materials\r\n * are made available under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution, and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *    Obeo - initial API and implementation\r\n *******************************************************************************/\r\nimport { Action } from 'sprotty/lib';\r\n\r\n/**\r\n * Action used to execute node creation tools.\r\n *\r\n * @gcoutable\r\n */\r\nexport class ExecuteNodeCreationToolAction implements Action {\r\n\r\n  /**\r\n   * The kind of the action.\r\n   */\r\n  public static readonly KIND = 'executeNodeCreationTool';\r\n\r\n  /**\r\n   * The type of the action.\r\n   */\r\n  public static readonly TYPE = 'NodeCreationDescriptionImpl';\r\n\r\n  /**\r\n   * The kind of the action.\r\n   */\r\n  public readonly kind = ExecuteNodeCreationToolAction.KIND;\r\n\r\n  /**\r\n   * The name of the node creation tool to execute.\r\n   */\r\n  public readonly toolName: string;\r\n\r\n  /**\r\n   * The constructor.\r\n   * @param toolName The name of the tool to execute\r\n   */\r\n  constructor(toolName: string) {\r\n    this.toolName = toolName;\r\n  }\r\n\r\n}","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { Action } from 'sprotty/lib';\n\n/**\n * Action used to generic tools.\n *\n * @sbegaudeau\n */\nexport class ExecuteToolAction implements Action {\n\n  /**\n   * The kind of the action.\n   */\n  public static readonly KIND = 'executeTool';\n\n  /**\n   * The type of the action.\n   */\n  public static readonly TYPE = 'ToolDescriptionImpl';\n\n  /**\n   * The kind of the action.\n   */\n  public readonly kind = ExecuteToolAction.KIND;\n\n  /**\n   * The name of the tool to execute.\n   */\n  public readonly toolName: string;\n\n  /**\n   * The constructor.\n   * @param toolName The name of the tool to execute\n   */\n  constructor(toolName: string) {\n    this.toolName = toolName;\n  }\n\n}","/*******************************************************************************\r\n * Copyright (c) 2018 Obeo.\r\n * All rights reserved. This program and the accompanying materials\r\n * are made available under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution, and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *    Obeo - initial API and implementation\r\n *******************************************************************************/\r\nimport { Action } from 'sprotty/lib';\r\n\r\n/**\r\n * Action used to toggle a layer.\r\n *\r\n * @author gcoutable\r\n */\r\nexport class ToggleLayerAction implements Action {\r\n\r\n  /**\r\n   * The kind of the action.\r\n   */\r\n  public static readonly KIND: string = 'toggleLayer';\r\n\r\n  /**\r\n   * The kind of the action.\r\n   */\r\n  public readonly kind: string = ToggleLayerAction.KIND;\r\n\r\n  /**\r\n   * The name of the layer.\r\n   */\r\n  public readonly layerName: string;\r\n\r\n  /**\r\n   * The new state of the layer.\r\n   */\r\n  public readonly newState: boolean;\r\n\r\n  /**\r\n   * The constructor.\r\n   * @param layerName The name of the layer\r\n   * @param newState The new state of the layer\r\n   */\r\n  constructor(layerName: string, newState: boolean) {\r\n    this.layerName = layerName;\r\n    this.newState = newState;\r\n  }\r\n}","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport { Action, WebSocketDiagramServer } from \"sprotty/lib\";\nimport { ExecuteContainerCreationToolAction } from \"../actions/execute-container-creation-tool-action\";\nimport { ExecuteNodeCreationToolAction } from \"../actions/execute-node-creation-tool-action\";\nimport { ExecuteToolAction } from \"../actions/execute-tool-action\";\nimport { ToggleLayerAction } from \"../actions/toogle-layers-action\";\nimport { Layer } from \"../types/layer\";\nimport { Tool } from \"../types/tool\";\n\n/**\n * Indicates if the given tool is supported by the diagram.\n * @param tool The tool\n * @returns true if the tool is supported, false otherwise\n */\nexport function canHandleTool(tool: Tool): boolean {\n  let canHandle = false;\n  switch (tool.toolType) {\n    case ExecuteNodeCreationToolAction.TYPE:\n      canHandle = true;\n      break;\n    case ExecuteContainerCreationToolAction.TYPE:\n      canHandle = true;\n      break;\n    case ExecuteToolAction.TYPE:\n      canHandle = true;\n      break;\n    default:\n      canHandle = false;\n      break;\n  }\n  return canHandle;\n}\n\n/**\n * Creates the action for the given tool.\n * @param tool The tool\n * @returns The action used to run the given tool or null if the tool is not supported\n */\nfunction createToolAction(tool: Tool): Action | null {\n  let action: Action | null = null;\n  switch (tool.toolType) {\n    case ExecuteNodeCreationToolAction.TYPE:\n      action = new ExecuteNodeCreationToolAction(tool.id);\n      break;\n    case ExecuteContainerCreationToolAction.TYPE:\n      action = new ExecuteContainerCreationToolAction(tool.id);\n      break;\n    case ExecuteToolAction.TYPE:\n      action = new ExecuteToolAction(tool.id);\n    default:\n      break;\n  }\n  return action;\n}\n\n/**\n * Creates the action for the given layer.\n * @param layer The layer\n * @returns The action used to toggle the given layer\n */\nfunction createLayerAction(layer: Layer, newState: boolean): Action {\n  return new ToggleLayerAction(layer.id, newState);\n}\n\n/**\n * Creates the DOM elements used to execute the given tools.\n * @param diagramServer The diagram server\n * @param tools The tools to display\n */\nexport function createDOMElementsForTools(\n  diagramServer: WebSocketDiagramServer,\n  tools: Array<Tool>\n): void {\n  const toolPaletteElement = document.getElementById(\"tools-palette\");\n  if (toolPaletteElement !== null) {\n    tools.forEach(tool => {\n      const button = document.createElement(\"button\");\n      button.setAttribute(\"type\", \"button\");\n      button.setAttribute(\"class\", \"tool\");\n      const toolLabel = tool.name || tool.id;\n\n      const image = document.createElement(\"img\");\n\n      // FIXME Change the computation of the tool image source\n      let imageSource = \"assets/ToolDescription.gif\";\n      if (toolLabel.includes(\"Woman\")) {\n        imageSource = \"assets/woman.svg\";\n      } else if (toolLabel.includes(\"Man\")) {\n        imageSource = \"assets/man.svg\";\n      } else if (toolLabel.includes(\"New customer\")) {\n        imageSource = \"assets/LaneSet.png\";\n      } else if (toolLabel.includes(\"Start\")) {\n        imageSource = \"assets/start.svg\";\n      } else if (toolLabel.includes(\"Select\")) {\n        imageSource = \"assets/Task.svg\";\n      } else if (toolLabel.includes(\"Order\")) {\n        imageSource = \"assets/Task.svg\";\n      } else if (toolLabel.includes(\"Wait\")) {\n        imageSource = \"assets/event-based-gateway.svg\";\n      } else if (toolLabel.includes(\"Eat\")) {\n        imageSource = \"assets/end.svg\";\n      }\n\n      image.setAttribute(\"src\", imageSource);\n      button.appendChild(image);\n\n      const label = document.createElement(\"label\");\n      label.textContent = toolLabel;\n      button.appendChild(label);\n\n      button.addEventListener(\"click\", event => {\n        const toolAction = createToolAction(tool);\n        if (toolAction !== null) {\n          diagramServer.handle(toolAction);\n        }\n      });\n      toolPaletteElement.appendChild(button);\n    });\n  }\n}\n\n/**\n * Creates the DOM elements used to activate or deactivate layers.\n * @param diagramServer The diagram server\n * @param layers The layers to display\n */\nexport function createDOMElementForLayers(\n  diagramServer: WebSocketDiagramServer,\n  layers: Array<Layer>\n): void {\n  const layerPaletteElement = document.getElementById(\"layers-palette\");\n  if (layerPaletteElement != null) {\n    layers.forEach((layer: Layer) => {\n      const layerId = `layer-${layer.id}`;\n      const layerContainerElement = document.createElement(\"div\");\n      layerContainerElement.setAttribute(\"class\", \"layer\");\n\n      const layerLabelElement = document.createElement(\"label\");\n      layerLabelElement.setAttribute(\"for\", layerId);\n      layerLabelElement.textContent = `${layer.name || layer.id} `;\n      layerContainerElement.appendChild(layerLabelElement);\n\n      const layerCheckboxElement = document.createElement(\"input\");\n      layerCheckboxElement.setAttribute(\"type\", \"checkbox\");\n      if (layer.isActive) {\n        layerCheckboxElement.setAttribute(\"checked\", \"checked\");\n      }\n      layerCheckboxElement.setAttribute(\"id\", layerId);\n      layerCheckboxElement.addEventListener(\"click\", event => {\n        const eventTarget = event.target as HTMLInputElement;\n        const layerAction = createLayerAction(layer, eventTarget.checked);\n        if (layerAction !== null) {\n          diagramServer.handle(layerAction);\n        }\n      });\n      layerContainerElement.appendChild(layerCheckboxElement);\n      layerPaletteElement.appendChild(layerContainerElement);\n    });\n  }\n}\n\n/**\n * Cleans the content of the HTMLElement.\n * @param element The HTMLElement\n */\nexport function cleanDOMElement(element: HTMLElement | null): void {\n  if (element !== null) {\n    for (const index = 0; index < element.children.length; ) {\n      const item = element.children.item(index);\n      if (item !== null) {\n        element.removeChild(item);\n      }\n    }\n  }\n}\n","/*******************************************************************************\n * Copyright (c) 2018 Obeo.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    Obeo - initial API and implementation\n *******************************************************************************/\nimport {\n  Action,\n  ActionHandlerRegistry,\n  IActionHandler,\n  ICommand,\n  RequestModelAction,\n  TYPES,\n  WebSocketDiagramServer\n} from \"sprotty/lib\";\nimport { RequestLayersAction } from \"../actions/request-layers-action\";\nimport { RequestToolsAction } from \"../actions/request-tools-action\";\nimport { SetLayersAction } from \"../actions/set-layers-action\";\nimport { SetToolsAction } from \"../actions/set-tools-action\";\nimport { createContainer } from \"../di.config\";\nimport { SiriusWebSocketDiagramServer } from \"../sirius-websocket-diagram-server\";\nimport { Tool } from \"../types/tool\";\nimport {\n  canHandleTool,\n  cleanDOMElement,\n  createDOMElementForLayers,\n  createDOMElementsForTools\n} from \"./tools-utils\";\n\nrequire(\"reconnecting-websocket\");\n\nexport interface ISiriusAction<T extends Action> extends IActionHandler {\n  handle(action: T): ICommand | Action | void;\n}\n\n/* tslint:disable */\nexport class SetLayersActionHandler implements ISiriusAction<SetLayersAction> {\n  private readonly diagramServer: WebSocketDiagramServer;\n\n  constructor(diagramServer: WebSocketDiagramServer) {\n    this.diagramServer = diagramServer;\n  }\n\n  /**\n   * Handles the given action received by the server.\n   * @param action The action\n   */\n  public handle(action: SetLayersAction): void {\n    this.handleSetLayersAction(action);\n  }\n\n  /**\n   * Handles the set layers action.\n   * @param action The action\n   */\n  private handleSetLayersAction(action: SetLayersAction) {\n    cleanDOMElement(document.getElementById(\"layers-palette\"));\n    createDOMElementForLayers(this.diagramServer, action.layers);\n  }\n}\n/* tslint:enable */\n\n/* tslint:disable */\nexport class SetToolsActionHandler implements ISiriusAction<SetToolsAction> {\n  private readonly diagramServer: WebSocketDiagramServer;\n\n  constructor(diagramServer: WebSocketDiagramServer) {\n    this.diagramServer = diagramServer;\n  }\n\n  /**\n   * Handles the given action received by the server.\n   * @param action The action\n   */\n  handle(action: SetToolsAction): void {\n    this.handleSetToolsAction(action);\n  }\n\n  /**\n   * Handles the set tools action.\n   * @param action The action\n   */\n  private handleSetToolsAction(action: SetToolsAction) {\n    const tools: Array<Tool> = action.tools.filter((tool: Tool) => {\n      return canHandleTool(tool);\n    });\n    cleanDOMElement(document.getElementById(\"tools-palette\"));\n    createDOMElementsForTools(this.diagramServer, tools);\n  }\n}\n/* tslint:enable */\n\n/**\n * Creates the Sirius diagram and connect it to the server.\n *\n * @sbegaudeau\n */\nexport function initializeSiriusDiagram(\n  defaultProject: string,\n  defaultAird: string,\n  defaultRepresentationName: string,\n  host: string,\n  domId: string\n) {\n  const websocket = new WebSocket(\"ws://\" + host + \"/diagrams/api\");\n  const container = createContainer(domId);\n\n  const diagramServer = container.get<SiriusWebSocketDiagramServer>(\n    TYPES.ModelSource\n  );\n  diagramServer.listen(websocket);\n\n  const actionHandlerRegistry = container.get<ActionHandlerRegistry>(\n    TYPES.ActionHandlerRegistry\n  );\n  actionHandlerRegistry.register(\n    SetLayersAction.KIND,\n    new SetLayersActionHandler(diagramServer)\n  );\n  actionHandlerRegistry.register(\n    SetToolsAction.KIND,\n    new SetToolsActionHandler(diagramServer)\n  );\n\n  // Connect to the diagram server\n  websocket.addEventListener(\"open\", event => {\n    const url = new URL(window.location.href);\n    const parameters = new URLSearchParams(url.search);\n    const project: string = parameters.get(\"project\") || defaultProject;\n    const aird: string = parameters.get(\"aird\") || defaultAird;\n    const representationName: string =\n      parameters.get(\"representationName\") || defaultRepresentationName;\n\n    diagramServer.clientId = `__PROJECT__${project}__AIRD__${aird}__REPRESENTATION__${representationName}__CLIENT_ID__${Math.random()}`;\n    diagramServer.handle(new RequestToolsAction());\n    diagramServer.handle(new RequestLayersAction());\n    diagramServer.handle(\n      new RequestModelAction({\n        project,\n        aird,\n        representationName\n      })\n    );\n  });\n}\n","import React, { Component } from \"react\";\nimport { Resource } from \"../../dto/Resource\";\nimport { Representation } from \"../../dto/Representation\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { getAIRDResource } from \"../../services/SiriusServices\";\nimport { HOST, PORT } from \"../../services/const\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport sample from \"./sample.png\";\nimport \"./sprotty.css\";\nimport \"./page.css\";\nimport \"./diagram.css\";\nimport { initializeSiriusDiagram } from \"../../sirius-frontend/app/standalone\";\ninterface Props extends RouteComponentProps<any> {\n  resource: Resource;\n  representationName: string;\n}\n\ninterface State {\n  representation: Representation | null;\n}\n\nclass RepresentationViewer extends Component<Props, State> {\n  private siriusDom: React.RefObject<HTMLDivElement>;\n\n  constructor(props: any) {\n    super(props);\n    this.state = { representation: null };\n\n    this.siriusDom = React.createRef();\n  }\n  render() {\n    const representation = this.state.representation;\n    let content;\n    if (representation !== undefined && representation !== null) {\n      content = <div />;\n    } else {\n      content = <CircularProgress />;\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"diagram-main\">\n          <div ref={this.siriusDom} id=\"sirius\" className=\"sprotty\">\n            {content}\n          </div>\n        </div>\n        <div className=\"palette-main\">\n          <h2>Layers</h2>\n          <div id=\"layers-palette\" />\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    const dom = this.siriusDom.current;\n    if (dom == null) {\n      return;\n    }\n    const { resource, representationName } = this.props;\n    getAIRDResource(resource).then(airdResource => {\n      airdResource.representations.forEach(representation => {\n        if (representationName === representation.name) {\n          this.setState({ representation });\n          initializeSiriusDiagram(\n            airdResource.project,\n            airdResource.name,\n            representation.name,\n            `${HOST}:${PORT}`,\n            dom.id\n          );\n          return;\n        }\n      });\n    });\n  }\n}\nexport default withRouter(RepresentationViewer);\n","import React, { Component } from \"react\";\nimport AddProject from \"../components/AddProject\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport CodeIcon from \"@material-ui/icons/Code\";\n\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport AddResource from \"../components/AddResource\";\nimport { Resource } from \"../dto/Resource\";\nimport { getSubResources, deleteResource } from \"../services/ResourceServices\";\nimport { History } from \"history\";\n\ninterface Props extends RouteComponentProps<any> {\n  resource: Resource;\n  history: History;\n}\n\ninterface State {\n  resources: Resource[];\n}\n\nexport class FolderContents extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = { resources: [] };\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { resource } = this.props;\n    if (resource.path !== prevProps.resource.path) {\n      this.refresh();\n    }\n  }\n\n  refresh() {\n    const { resource } = this.props;\n    getSubResources(resource).then(resources => {\n      this.setState({ resources });\n    });\n  }\n\n  handleRefresh = () => {\n    this.refresh();\n  };\n  render() {\n    return (\n      <div>\n        <List component=\"nav\">\n          {this.state.resources.map(resource => (\n            <ListItem\n              button\n              key={resource.name}\n              onClick={() => {\n                this.props.history.push(\n                  \"/\" +\n                    resource.project +\n                    \"/\" +\n                    encodeURIComponent(resource.path)\n                );\n              }}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  {resource.isFolder ? <FolderIcon /> : <CodeIcon />}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={resource.name} />\n              <ListItemSecondaryAction>\n                <IconButton\n                  aria-label=\"Delete\"\n                  onClick={this.handleDelete.bind(this, resource)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n        <AddResource\n          {...this.props}\n          container={this.props.resource}\n          onRefresh={this.handleRefresh.bind(this)}\n        />\n        <AddResource\n          {...this.props}\n          folder={true}\n          container={this.props.resource}\n          onRefresh={this.handleRefresh.bind(this)}\n        />\n      </div>\n    );\n  }\n\n  handleDelete(resource) {\n    deleteResource(resource).then(deleted => {\n      if (deleted) {\n        this.refresh();\n      }\n    });\n  }\n}\nexport default withRouter(FolderContents);\n","import React, { Component } from \"react\";\n\nimport NablaEditor from \"../components/editors/NablaEditor\";\nimport DefaultViewer from \"../components/viewer/DefaultViewer\";\nimport AIRDViewer from \"../components/viewer/AIRDViewer\";\nimport RepresentationViewer from \"../components/viewer/RepresentationViewer\";\nimport Breadcrumb from \"../components/Breadcrumb\";\nimport FolderContents from \"../components/FolderContents\";\nimport { getResource } from \"../services/ResourceServices\";\nimport { Resource } from \"../dto/Resource\";\nimport { LANGUAGE_ID } from \"../services/const\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\ninterface Props {\n  projectName: string;\n  resourcePath: string;\n  representationName?: string;\n}\n\ninterface State {\n  resource: Resource | null;\n}\n\nconst styles = theme => ({});\n\nclass ResourcePage extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = { resource: null };\n  }\n\n  render() {\n    const { projectName, resourcePath, ...others } = this.props;\n    const { resource } = this.state;\n    let resourceContent;\n    if (resource !== null) {\n      if (resource.isFolder) {\n        resourceContent = <FolderContents resource={resource} />;\n      } else {\n        if (resourcePath.endsWith(\".\" + LANGUAGE_ID)) {\n          resourceContent = (\n            <NablaEditor\n              {...others}\n              project={projectName}\n              resource={resource}\n            />\n          );\n        } else if (resourcePath.endsWith(\".aird\")) {\n          if (this.props.representationName !== undefined) {\n            resourceContent = (\n              <RepresentationViewer\n                {...others}\n                resource={resource}\n                representationName={this.props.representationName}\n              />\n            );\n          } else {\n            resourceContent = <AIRDViewer {...others} resource={resource} />;\n          }\n        } else {\n          resourceContent = <DefaultViewer {...others} resource={resource} />;\n        }\n      }\n    } else {\n      resourceContent = <CircularProgress />;\n    }\n    return (\n      <div>\n        <Breadcrumb\n          projectName={projectName}\n          resourcePath={resourcePath}\n          representationName={this.props.representationName}\n        />\n        {resourceContent}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { projectName, resourcePath } = this.props;\n    if (\n      projectName !== prevProps.projectName ||\n      resourcePath !== prevProps.resourcePath\n    ) {\n      this.refresh();\n    }\n  }\n\n  refresh() {\n    getResource(this.props.projectName, this.props.resourcePath).then(\n      resource => {\n        this.setState({ resource });\n      }\n    );\n  }\n}\n\nexport default withStyles(styles)(ResourcePage);\n","import \"reflect-metadata\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, match, Link } from \"react-router-dom\";\nimport ProjectsPage from \"./pages/ProjectsPage\";\nimport ProjectPage from \"./pages/ProjectPage\";\nimport ResourcePage from \"./pages/ResourcePage\";\nimport { available } from \"./services/CommonServices\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { version, name } from \"../package.json\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing.unit * 1,\n    padding: `${theme.spacing.unit * 2}px 0`,\n    \"background-color\": \"#f5f5f5\"\n  },\n  content: {\n    \"min-height\": \"700px\"\n  }\n});\n\nclass App extends Component<\n  { classes: any },\n  { loading: boolean; servicesAvailable: boolean }\n> {\n  constructor(props) {\n    super(props);\n    this.state = { loading: true, servicesAvailable: false };\n  }\n  componentDidMount() {\n    available().then(serviceRespond => {\n      this.setState({\n        loading: false,\n        servicesAvailable: serviceRespond\n      });\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const renderResource = (\n      {\n        match\n      }: { match: match<{ projectName: string; resourcePath: string }> },\n      ...others\n    ) => (\n      <ResourcePage\n        {...others}\n        projectName={match.params.projectName}\n        resourcePath={decodeURIComponent(match.params.resourcePath)}\n      />\n    );\n\n    const renderRepresentation = (\n      {\n        match\n      }: {\n        match: match<{\n          projectName: string;\n          resourcePath: string;\n          viewpoint: string;\n          representationName: string;\n        }>;\n      },\n      ...others\n    ) => (\n      <ResourcePage\n        {...others}\n        projectName={match.params.projectName}\n        resourcePath={decodeURIComponent(match.params.resourcePath)}\n        representationName={match.params.representationName}\n      />\n    );\n\n    const renderProject = (\n      { match }: { match: match<{ projectName: string }> },\n      ...others\n    ) => <ProjectPage {...others} projectName={match.params.projectName} />;\n\n    if (this.state.loading) {\n      return <div>Loading...</div>;\n    }\n    if (!this.state.servicesAvailable) {\n      return <div>Cannot fetch the server</div>;\n    }\n    return (\n      <div className=\"App\">\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography variant=\"h4\" color=\"inherit\">\n              NabLab (v{version})\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.content}>\n          <Switch>\n            <Route exact path=\"/\" component={ProjectsPage} />\n            <Route\n              path=\"/:projectName/:resourcePath/:representationName\"\n              render={renderRepresentation}\n            />\n            <Route path=\"/:projectName/:resourcePath\" render={renderResource} />\n            <Route path=\"/:projectName\" render={renderProject} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","import { URI_API } from \"./const\";\n\nexport function available(): Promise<boolean> {\n  return fetch(URI_API, {\n    method: \"get\",\n    mode: \"no-cors\"\n  })\n    .then(() => true)\n    .catch(e => false);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"monaco-languageclient/lib/vscode-compatibility\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}